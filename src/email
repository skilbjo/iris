#!/usr/bin/env bash

mutt_setup(){
  if [[ $(whoami) == 'root' ]]; then
    local home_dir='/root'
  elif [[ $(whoami) == 'sbx_'* ]]; then
    local home_dir="/home/$(whoami)"
  elif [[ $(whoami) == 'skilbjo' ]]; then
    echo 'Easy, big guy...' && exit 1
  fi

  local muttrc="set realname  = 'Iris'
set from      = '${email}'
set imap_user = '${email}'
set imap_pass = '${email_pw}'
set smtp_pass = '${email_pw}'
set smtp_url  = 'smtps://"$(echo "$email" | sed 's/@.*//')"@smtp.gmail.com:465/'
set folder    = 'imaps://imap.gmail.com:993'
set spoolfile = '+INBOX'
set postponed = '+[Gmail]/Drafts'
set move      = 'no'
set record    = '+sent'
set copy      = 'no'
set imap_keepalive = 900
set crypt_use_gpgme     = 'no'
set header_cache        = ~/.mutt/cache/headers
set message_cachedir    = ~/.mutt/cache/bodies
set certificate_file    = ~/.mutt/certificates"

  echo "$muttrc" >"${home_dir}/.muttrc"
}

create_mime_email(){
  local report="$1"
  local report_name="$(echo "$report" | sed 's/\.[^.]*$//')"
  local distro_list="$2"
  set +u; local html="$3"; set -u
  local subject="Iris report for ${report} on $(date +%F)"
  if [[ -z $html ]]; then
    local body="Iris report for $(date +%F). See attached file."
  else
    local body="Iris report for $(date +%F): $(cat "${tmp_dir}/${report_name}.html" | sed 's/\"//g' | tr -d "\n\r")"
  fi
  if [[ $(whoami) == 'root' ]] || [[ $(whoami) == 'sbx_'* ]]; then
    local attachment="$(base64 -w 0 "${tmp_dir}/${report}")"
  elif [[ $(whoami) == 'skilbjo' ]]; then
    local attachment="$(gbase64 -w 0 "${tmp_dir}/${report}")"
  fi

  local mime_email="$(echo "From: ${email}
To: ${distro_list}
Subject: ${subject}
MIME-Version: 1.0
Content-Type: Multipart/Mixed; boundary=\"NextPart\"

--NextPart
Content-Type: text/html;

${body}

--NextPart
Content-Type: text/csv;
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename=${report}
${attachment}
--NextPart--")"

  echo "$mime_email"
}

aws_ses(){
  local report="$1"
  local report_name="$(echo "$report" | sed 's/\.[^.]*$//')"
  local distro_list="$2"
  local msg="$(create_mime_email "$report" "$distro_list" "$html")"

  jq -n --arg data "$msg" '{Data: $data}' >"${tmp_dir}/${report_name}.json"

  if [[ $(whoami) == 'root' ]]; then
    aws ses \
      send-raw-email \
      --region us-east-1 \
      --raw-message "file://${tmp_dir}/${report_name}.json"
  elif [[ $(whoami) == 'sbx_'* ]]; then
    # Query rsults with lines longer than 8 fail on AWS Lambda
    # --raw-message "fileb://" results in
    #   "'in <string>' requires string as left operand, not int"
    # mutt also fails, with 'Couldn't lock /sent' and
    #   '241 Segmentation fault (core dumped) | mutt -e 'set content_type=text/html' -s "Iris report for $report on $(date +%F)" -a "/tmp/${report}.csv" -- "$distro_list"'
    aws ses \
      send-raw-email \
      --region us-east-1 \
      --raw-message "file://${tmp_dir}/${report_name}.json"
  elif [[ $(whoami) == 'skilbjo' ]]; then
    aws ses \
      send-raw-email \
      --profile personal \
      --region us-east-1 \
      --raw-message "file://${tmp_dir}/${report_name}.json"
  else
    >&2 echo "user is: $(whoami), add to setup fn"
  fi
}

curl_email(){
  local report="$1"
  local report_name="$(echo "$report" | sed 's/\.[^.]*$//')"
  local distro_list="$2"
  set +u; local html="$3"; set -u
  local msg="$(create_mime_email "$report" "$distro_list" "$html")"

  echo "$msg" >"${tmp_dir}/${report_name}.txt"

  curl \
    --insecure \
    --ssl-reqd \
    --url 'smtps://smtp.gmail.com:465' \
    --mail-from "$email" \
    --mail-rcpt "$email" \
    --user "${email}:${email_pw}" \
    --upload-file "${tmp_dir}/${report_name}.txt"
  sleep 2
}

mutt_email() {
  local report="$1"
  local report_name="$(echo "$report" | sed 's/\.[^.]*$//')"
  local distro_list="$2"
  set +u; local html="$3"; set -u
  if [[ -z $html ]]; then
    local body="Iris report for $(date +%F). See attached file."
  else
    local body="Iris report for $(date +%F): $(cat "${tmp_dir}/${report_name}.html" | sed 's/\"//g' | tr -d "\n\r")"
  fi

  echo "$body" | \
    mutt -e 'set content_type=text/html' \
      -s "Iris report for $report on $(date +%F)" \
      -a "${tmp_dir}/${report}" \
      -- "$distro_list"
  sleep 2
}

email(){
  local report="$1"
  local distro_list="$2"
  set +u; local html="$3"; set -u

  if [[ $(whoami) == 'root' ]]; then
    # docker (k8s, odroid, pi)
    curl_email "$report" "$distro_list" "$html"
  elif [[ $(whoami) == 'sbx_'* ]]; then
    # AWS Lambda
    curl_email "$report" "$distro_list" "$html"
  elif [[ $(whoami) == 'skilbjo' ]]; then
    # osx
    curl_email "$report" "$distro_list" "$html"
    #mutt_email "$report" "$distro_list" "$html"
  fi
}
