#!/usr/bin/env bash
set -eou pipefail

dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
resources_dir="${dir}/../resources/"
src_dir="${dir}"
util_setup "$dir"
tmp_dir="$(mkdir -p "/tmp/iris" && echo "/tmp/iris")"

task=''

source "${dir}/util"

usage(){ echo "Usage: iris-daily: ${0} [--task <morning|night|all...>]" 1>&2; exit 1; }
while [[ $# -gt 0 ]]; do
  case "$1" in
    -t|--task)  task="$2"; shift ;;
    --testing)  task='testing' ;;
  esac
  shift
done
if [[ -z $task ]]; then usage; fi

setup(){
  export email="${_email}"


  if [[ $(whoami) == 'root' ]]; then
    source "${src_dir}/athena"
    export email_cmd="${src_dir}/email"
    add_aws_vars
  elif [[ $(whoami) == 'sbx_'* ]]; then
    source "${src_dir}/athena"
    export email_cmd="${src_dir}/email"
    add_aws_vars
  elif [[ $(whoami) == 'skilbjo' ]]; then
    case "$(uname)" in
      Darwin  ) local prefix='/Users' ;;
      FreeBSD ) local prefix='/home' ;;
    esac
    source "${prefix}/skilbjo/dev/engineering/src/athena.user"
    export email_cmd="${prefix}/skilbjo/dev/engineering/src/email"
  else
    >&2 echo "user is: $(whoami), add to setup fn"
  fi

  mkdir -p "${tmp_dir}/dw" && mkdir -p "${tmp_dir}/athena"
}

_report(){
  local report="$1"
  local user="$2"
  local distro_list="$3"

  local sql="$(cat "${resources_dir}/dw/${report}.sql" | sed "s/:user/${user}/")"

  psql "$db_uri" --html -c "$sql"               >"${tmp_dir}/${report}.html" # html
  psql "$db_uri" -AF',' --pset footer -c "$sql" >"${tmp_dir}/${report}.csv"  # csv

  "$email_cmd" \
    --report      "${tmp_dir}/${report}.csv" \
    --distro-list "$distro_list" \
    --html
}

_report_athena(){
  local report="$1"
  local user="$2"
  local distro_list="$3"

  local sql="$(cat "${resources_dir}/athena/${report}_athena.sql" | \
    sed "s/:user/${user}/")"

  query "$sql"          >"${tmp_dir}/${report}.csv"  # csv
  csv_to_html "$report" >"${tmp_dir}/${report}.html" # html

  "$email_cmd" \
    --report      "${tmp_dir}/${report}.csv" \
    --distro-list "$distro_list" \
    --html
}

daily(){
  set +u; local db="$db_uri"; set -u
    if [[ ! -z $db ]]; then
      _report portfolio 'skilbjo' "$email"  && \
      _report portfolio 'michie'  "$michie"
    else
      _report_athena portfolio 'skilbjo' 'john.skilbeck@gmail.com'
    fi;
}

weekly(){
  set +u; local db="$db_uri"; set -u
    if [[ ! -z $db ]]; then
      _report asset_type 'skilbjo' "$email" && \
        _report location 'skilbjo' "$email" && \
        _report capitalization 'skilbjo' "$email" && \
        _report investment_style 'skilbjo' "$email"
    else
      _report_athena portfolio 'skilbjo' "$email"
    fi;
}

testing(){
  set +u; local db="$db_uri"; set -u

  if [[ ! -z $db ]]; then
    _report        portfolio 'skilbjo' "$email"
  else
    _report_athena portfolio 'skilbjo' "$email"
  fi
}

setup

case "$task" in
  daily )     daily && \
                ping_healthchecks "$healthchecks_io_iris";;
  weekly )    weekly ;;
  testing )   testing ;;
  * ) echo 'in src/run-it, no args provided' && exit 1 ;;
esac
