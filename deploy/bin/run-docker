#!/usr/bin/env bash
set -eou pipefail

dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../../" && pwd )" && cd "$dir"
app="$(basename $(pwd))"
arch=''

case "$(uname -m)" in
  amd64* | x_86* | x86_64* )
    img="quay.io/skilbjo/${app}:latest" ;;
  arm* ) arch='arm'
    img="quay.io/skilbjo/${app}:${arch}" ;;
esac

job_cmd='/usr/local/deploy/bin/run-job'

get_current_artifacts(){
  # any scripts need updating?
  git pull -f

  # remove all app containers
  set +e
  ## below not needed as the docker run cmd has the --rm flag
  #docker ps -a | grep "$app" | awk '{print $1}' | uniq | xargs docker rm -f

  # remove all app images
  docker images | grep "$app" | awk '{print $3}' | uniq | xargs docker rmi -f
  set -e
}

update_crond(){
  case "$(whoami)" in
    circleci) echo '' ;;
    *)
        case "$(uname)" in
          ('Linux') sed -i '2 SHELL=/usr/bin/bash'         "${dir}/deploy/tasks/crontab"
                    sed -i '3 cmd="deploy/bin/run-docker"' "${dir}/deploy/tasks/crontab" ;;
        esac
        sudo cp "${dir}/deploy/tasks/crontab" "/etc/cron.d/${app}" ;;
  esac
}

get_current_artifacts && \
  update_crond

# local:            -e aws_access_key_id="$(echo $aws_access_key_id)" \
# circleci runtime: -e AWS_ACCESS_KEY_ID="$(cat ~/.aws/credentials | grep -A 2 skilbjo-robot | grep aws_access_key_id | awk '{print $3}')" \

docker run --rm \
  --name="$(echo $app $@ | tr ' ' '_')" \
  -e db_uri="$(echo "${db_uri:-}")" \
  -e _email="$(echo $email)" \
  -e email_pw="$(echo $email_pw)" \
  -e michie="$(echo "${michie:-}")" \
  -e aws_access_key_id="$(echo "${aws_access_key_id:-$robot_aws_access_key_id}")" \
  -e aws_secret_access_key="$(echo "${aws_secret_access_key:-$robot_aws_secret_access_key}")" \
  -e aws_region='us-east-1' \
  -e healthchecks_io_iris="$(echo $healthchecks_io_iris)" \
  "$img" \
  "$job_cmd" $@
