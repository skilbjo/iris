#!/usr/bin/env bash
set -eou pipefail

dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../../" && pwd )" && cd "$dir"
app="$(basename $(pwd))"
registry='quay.io'
image="${registry}/skilbjo/${app}"

setup(){
  docker login -u "$QUAY_ROBOT_USERNAME" -p "$QUAY_ROBOT_PASSWORD" "$registry"
}

publish(){
  set +u; local tag="$1"; set -u

  if [[ -z $tag ]]; then
    cat "${dir}/deploy/default/Dockerfile" >Dockerfile

    if [[ $CIRCLE_BRANCH == master ]]; then
      tag='latest'
    else
      tag="${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}"
    fi
  else
    cat "${dir}/deploy/default/${tag}.Dockerfile" >Dockerfile

    if [[ $CIRCLE_BRANCH == master ]]; then
      tag="${tag}"
    else
      tag="${tag}-${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}"
    fi
  fi

  docker build --rm -t "${image}:${tag}" .
  docker tag "${image}:${tag}" "${image}:${CIRCLE_SHA1}"
  docker push "$image"

  if [[ -f Dockerfile ]]; then rm Dockerfile; fi
}

build_minidocker_image() {
  if [[ $CIRCLE_BRANCH == master ]]; then
    pull_tag='debian'
    push_tag='debian-minicon'
  else
    pull_tag="debian-${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}"
    push_tag="debian-minicon-${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}"
  fi

  minidock \
    -i "${image}:${pull_tag}" -t "${image}:${push_tag}" --apt \
    --include '/usr/local/resources/*' \
    --include '/usr/local/lib/python3.5/dist-packages/*' \
    --include '/usr/lib/python3.5/*' \
    -E bash -E cat -E ls -E head -E tail -E mkdir -E date -E touch \
    -E sleep -E grep -E uname -E tr -E base64 -E sed \
    -E jq -E aws -E curl -E which -E mutt -E mutt_dotlock \
    -E '/usr/local/src/athena' -E '/usr/local/src/util' \
    -E '/usr/local/deploy/bin/run-job' -E '/usr/local/src/run-it' \
    -- /usr/local/deploy/bin/run-job

  docker tag "${image}:${push_tag}" "${image}:${CIRCLE_SHA1}"
  docker push "$image"
}

setup

#publish
publish 'debian'
build_minidocker_image

#publish 'arm'
