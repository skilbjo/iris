#!/usr/bin/env bash
set -eou pipefail

dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../" && pwd )" && cd "$dir"
app="$(basename $dir)"

publish(){
  set +u; local tag="$1"; set -u
  local tag_suffix='dev'

  if [[ -z $tag ]]; then
    cat "${dir}/deploy/default/Dockerfile" >Dockerfile
    tag="$tag_suffix"
  else
    cat "${dir}/deploy/default/${tag}.Dockerfile" >Dockerfile
    tag="${tag}-${tag_suffix}"
  fi

  docker build --rm -t "${app}:${tag}" .
  docker tag "${app}:${tag}" "$app"

  if [[ -f Dockerfile ]]; then rm Dockerfile; fi
}

# this can only be run on a Linux machine
build_minidocker_image(){
  local x86_tag='x86-debian_dev'
  local image_tag='x86-debian-minicon_dev'

  if [[ $(cat /etc/os-release | grep 'Linux') == 'Linux' ]] && [[ -f /etc/os-release ]]; then
    source "./util"
    get_udocker
  else
    echo 'Not running in Linux. Try again inside a Debian VM.' 2>&1 && exit 1
  fi

  publish 'debian'

  minidock \
    -i $image:$x86_tag -t $image:$tag --apt \
    --include '/usr/local/resources/*' \
    --include '/usr/local/lib/python3.5/dist-packages/*' \
    --include '/usr/lib/python2.7/*' \
    --include '/usr/lib/python3.5/*' \
    -E bash -E aws -E jq -E cat -E mkdir -E date -E touch -E sed -E tr -E base64 -E sleep -E grep -E uname -E curl \
    -E '/usr/local/deploy/bin/run-job' -E '/usr/local/src/iris' -E '/usr/local/src/athena' -E '/usr/local/src/util' \
    -- /usr/local/deploy/bin/run-job

  docker login -u $QUAY_ROBOT_USERNAME -p $QUAY_ROBOT_PASSWORD 'quay.io'
  docker tag $app:$image_tag $app
  docker push $image
}

publish
publish 'arm'
publish 'debian'

# this can only be run on a Linux machine
#build_minidocker_image
